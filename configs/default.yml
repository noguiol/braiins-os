miner:
  # possible platforms are zynq-dm1-g9, zynq-dm1-g19, zynq-am1-s9
  platform: zynq-dm1-g19
  # miner HW identifier
#  hwid: Q50QDhdWuWq9yDr5
  # select NAND firmware which is used for boot
  firmware: 1
  # default miner pool
  pool:
    host: stratum+tcp://stratum.slushpool.com
    port: 3333
    user: '!non-existent-user!'
#    pass: x
  # HW specific settings
#  hw:
#    freq: 550
#    voltage: '0706'
#    fixed_freq: true

net:
  # default miner MAC address
  mac: 00:0A:35:FF:FF:FF
  # static IP settings
#  ip: 10.33.0.2
#  mask: 255.255.255.0
#  gateway: 10.33.0.1
#  dns_servers:
#  - 10.33.0.1
  # miner hostname when DHCP is used (static IP is not set)
#  hostname: bos-miner

build:
  # name of subdirectory in the build directory
  name: '{target}'
  # file with default OpenWrt configuration
  config: defaults/release.conf
  # file with list of packages for build images
  packages: defaults/release.yml
  # build key for signing packages and sysupgrade tarball
  key:
    secret: keys/test
    public: keys/test.pub
  # always copy default configuration file
  config_always: no
  # relative or absolute path to the build directory
  dir: build
  # specifies the number of jobs to run simultaneously
  jobs: 4
  # show all commands during build process
  verbose: no
  # target aliases for OpenWrt build system
  aliases:
    kernel: target/linux
    cgminer: package/utils/cgminer
  # attribute 'require': previous compatible firmware needed for upgrade
  # attribute 'include': components included in sysupgrade (firmware) for specific platform
  #   supported components - command, spl, uboot, fpga
  sysupgrade:
    zynq-dm1-g9:
      require: '2018-09-22-0-c169f7bc'
    zynq-dm1-g19:
      require: '2018-09-22-0-2a866bfc'
    zynq-dm1:
      major: no
      include: [command]
    zynq-am1:
      major: no
      require: '2018-10-24-0-9e5687a2'
      include: [command]

remote:
  # default configuration for fetching latest repository
  fetch: no
  # always fetch each repositories (it cannot be overridden)
  fetch_always: no
  # location aliases for remote repositories
  aliases:
    bos: '{meta_repo}'
    openwrt_feed: git://git.openwrt.org/feed
  # default location for remote repositories
  location: bos
  # default branch for repositories
  branch: '{meta_branch}'
  # list of remote repositories
  repos:
    lede:
      project: lede.git
    lede-packages:
      location: openwrt_feed
      project: packages.git
      branch: cd5c448758f30868770b9ebf8b656c1a4211a240
    lede-routing:
      location: openwrt_feed
      project: routing.git
      branch: d11075cd40a88602bf4ba2b275f72100ddcb4767
    lede-telephony:
      location: openwrt_feed
      project: telephony.git
      branch: ac6415e61f147a6892fd2785337aec93ddc68fa9
    luci:
      project: luci.git
    miner-feeds:
      project: braiins-os-feeds.git
    platform:
      match:
        zynq:
          project: zynq-io-bin.git
    u-boot:
      project: u-boot-xlnx.git
    linux:
      project: linux-xlnx.git
    cgminer:
      match:
        zynq-dm1:
          project: cgminer.git
        zynq-am1:
          project: bmminer.git
    # it is possible to continue with any user repositories

local:
  # list of output directories for local targets
  sd: output/{platform}/sd/
  sd_config: output/{platform}/sd/
  sd_recovery: output/{platform}/sd_recovery/
  sd_recovery_config: output/{platform}/sd_recovery/
  nand_recovery: output/{platform}/nand_recovery/
  upgrade: output/{platform}/upgrade/
  feeds: output/{platform}/feeds/

feeds:
  # always create feeds.conf
  create_always: no
  # always update feeds
  update_always: no
  # always install feeds
  install_always: no
  # list of links to local feeds
  links:
    packages: '{build_dir}/lede-packages'
    routing: '{build_dir}/lede-routing'
    telephony: '{build_dir}/lede-telephony'
    luci: '{build_dir}/luci'
    miner: '{build_dir}/miner-feeds'

uenv:
  # boot Linux from SD instead of NAND
  mac: yes
  # reset firmware to factory settings
  factory_reset: no
  # use for factory reset images from SD
  sd_images: no
  # boot Linux from SD instead of NAND
  sd_boot: no

deploy:
  # default targets
  # some targets are aliases with predefined behaviour:
  # * nand:
  #  - selects targets 'nand_recovery' and 'nand_config'
  #  - enables options 'write_miner_cfg', 'reset_uboot_env' and 'reboot'
  # * local_sd:
  #  - deploy SD images to local directory
  #  - selects target 'local_sd_config'
  # * local_sd_recovery:
  #  - deploy SD recovery images to local directory
  #  - selects target 'local_sd_recovery_config'
  targets:
#  - sd
#  - sd_recovery
#  - sd_config
#  - nand
#  - nand_recovery
#  - nand_firmware1
#  - nand_firmware2
#  - nand_config
  - local_sd
  - local_sd_config
  - local_sd_recovery
  - local_sd_recovery_config
  - local_nand_recovery
  - local_upgrade
  - local_feeds
  # base file which is used for concatenation with new firmware meta information
#  feeds_base: feeds/Packages
  # use factory or sysupgrade image for formating/updating UBI partition
  # for first load is needed factory image
  # factory image swipes rootfs_data overlay!
  factory_image: yes
  # write FPGA bitstream to NAND
  write_bitstream: no
  # remove UUID from SD card
  remove_extroot_uuid: no
  # set U-Boot environment with miner configuration (MAC, HWID, firmware)
  # it is useful for changing HWID when SD card is inserted
  # SD card U-Boot cannot write to the NAND directly
  set_miner_env: no
  # overwrite NAND with new miner configuration (MAC, HWID)
  # it is also necessary to reset uboot_env and overlay/extroot
  write_miner_cfg: no
  # erase U-Boot environment and set it to default one after reboot
  reset_uboot_env: no
  # erase NAND/UBI overlay (rootfs_data) and reinit it after reboot
  # it is erased only overlay for current firmware (selected by miner.firmware)
  reset_overlay: no
  # erase SD card overlay and reinit it after reboot
  reset_extroot: no
  # reboot miner after successful deploy
  reboot: no

  # setting for deploy over SSH connection
  ssh:
    # ip address or hostname of remote miner
    # when omitted then generated hostname 'miner-xxyyzz' is used
    # where xxyyzz are last three numbers from MAC address
#    hostname: 192.168.1.1
    # hostname suffix which is appended to generated hostname
    # it is not used when hostname is specified
#    hostname_suffix: .bo
    # ssh username
    username: root
    # ssh password
    password:
