# Copyright (C) 2018  Braiins Systems s.r.o.
#
# This file is part of Braiins Build System (BB).
#
# BB is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

flash_eraseall() {
	flash_erase "$1" 0 0
}

file_size() {
	printf "0x%x" $(wc -c < "$1")
}

phymem_expected="250564 kB"
phymem=$(grep MemTotal /proc/meminfo | awk '{print $2" "$3}')

mtd_hash_expected=4206f3244e8b7bccb7b19903e0ef152d
mtd_hash=$(cat /proc/mtd | md5sum | awk '{print $1}')

ETHADDR=$(fw_printenv -n ethaddr)
MINER_HWVER="G19"
IMAGE_FLAG=$(fw_printenv -n image_flag) # 0|1

SPL_OFF=0x0
UBOOT_OFF=0x80000
UBOOT_ENV1_OFF=0x180000
UBOOT_ENV2_OFF=0x1A0000
BITSTREAM_OFF=0x300000

UBOOT_MTD=0
UBOOT_ENV_MTD=4

if [ "x${phymem}" != "x${phymem_expected}" ]; then
	echo "Unsupported miner RAM size: ${phymem}" >&2
	exit 1
fi

if [ "x${mtd_hash}" != "x${mtd_hash_expected}" ]; then
	echo "Unsupported miner NAND partitioning" >&2
	cat /proc/mtd >&2
	exit 1
fi

if [ "x${MINER_HWVER}" != "x${FW_MINER_HWVER}" ]; then
	echo "Unsupported miner version: ${MINER_HWVER}" >&2
	exit 1
fi

if [ x${IMAGE_FLAG} == x"0" ]; then
	SRC_KERNEL_OFF=0x0840000
	DST_KERNEL_OFF=0x7D00000
	SRC_STAGE2_OFF=0x1240000
	DST_STAGE2_OFF=0x0A00000
	SRC_STAGE3_OFF=0x2640000
	DST_STAGE3_OFF=0x1E00000
	SRC_STAGE2_MTD=9
	DST_STAGE2_MTD=8
	SRC_STAGE3_MTD=9
	DST_STAGE3_MTD=8
elif [ x${IMAGE_FLAG} == x"1" ]; then
	SRC_KERNEL_OFF=0x0680000
	DST_KERNEL_OFF=0x1E00000
	SRC_STAGE2_OFF=0x1080000
	DST_STAGE2_OFF=0x0A00000
	SRC_STAGE3_OFF=0x2480000
	DST_STAGE3_OFF=0x1E00000
	SRC_STAGE2_MTD=8
	DST_STAGE2_MTD=7
	SRC_STAGE3_MTD=8
	DST_STAGE3_MTD=7
else
	echo "Unsupported image flag: ${IMAGE_FLAG}" >&2
	exit 1
fi
